{"version":3,"sources":["../lib/CompositionRoot.js"],"names":[],"mappings":";;;;;;AAAA,IAAM,cAAc,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;;AAEnD,IAAM,UAAU,GAAG,OAAO,CAAC,wBAAwB,CAAC,CAAC;AACrD,IAAM,IAAI,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;AACzC,IAAM,WAAW,GAAG,OAAO,CAAC,0BAA0B,CAAC,CAAC;;IAElD,eAAe;AACT,UADN,eAAe,GACN;wBADT,eAAe;;AAEnB,MAAI,CAAC,IAAI,GAAG,IAAI,WAAW,EAAE,CAAC,OAAO,EAAE,CAAC;AACxC,MAAI,CAAC,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;AACxB,MAAI,CAAC,WAAW,GAAG,IAAI,UAAU,EAAE,CAAC;EACpC;;cALI,eAAe;;SAMR,wBAAE;AACb,OAAI,MAAM,GAAG,IAAI,CAAC;AAClB,OAAI,IAAI,GAAG,IAAI,CAAC;AAChB,OAAI;;AACH,UAAM,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;IACpC,CACD,OAAM,CAAC,EAAC;;AACP,QAAI,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,mBAAmB,EAAE,CAAC;IAC/C;;AAED,OAAM,MAAM,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;AAC3C,UAAO,IAAI,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;GAChC;;;SACiB,8BAAG;AACpB,UAAO,IAAI,CAAC,WAAW,CAAC,kBAAkB,EAAE,CAAC;GAC7C;;;SACiB,8BAAG;AACpB,UAAO,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,CAAC;GACvC;;;SACkB,6BAAC,eAAe,EAAE;AACpC,UAAO,IAAI,CAAC,KAAK,CAAC,mBAAmB,EAAE,CAAC;GACxC;;;SACmB,8BAAC,aAAa,EAAE,eAAe,EAAE,YAAY,EAAE;AAClE,UAAO,IAAI,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,yBAAyB,EAAE,EAAE,eAAe,EAAE,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,EAAE,aAAa,EAAE,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;GAC9K;;;SACQ,mBAAC,MAAM,EAAE,cAAc,EAAE;AACjC,OAAM,GAAG,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;AACrC,UAAO,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,MAAM,EAAE,cAAc,CAAC,CAAC;GACjE;;;QAlCI,eAAe;;;AAsCrB,MAAM,CAAC,OAAO,GAAG,eAAe,CAAC","file":"CompositionRoot.js","sourcesContent":["const FrontEndBridge = require('./FrontEndBridge');\r\n\r\nconst Networking = require(\"omniscience-networking\");\r\nconst UPnP = require(\"omniscience-upnp\");\r\nconst SdkResolver = require('omniscience-sdk-resolver');\r\n\r\nclass CompositionRoot {\r\n\tconstructor() {\r\n\t\tthis._sdk = new SdkResolver().resolve();\r\n\t\tthis._upnp = new UPnP();\r\n\t\tthis._networking = new Networking();\r\n\t}\r\n\tcreateButton(){\r\n\t\tvar button = null;\r\n\t\tvar menu = null;\r\n\t\ttry { //desktop sdk\r\n\t\t\tbutton = this._sdk.firefox.button();\r\n\t\t}\r\n\t\tcatch(e){ //sdk for Android\r\n\t\t\tmenu = this._sdk.firefox.getNativeWindowMenu();\r\n\t\t}\r\n\r\n\t\tconst Button = require('./Firefox/Button');\r\n\t\treturn new Button(button, menu);\r\n\t}\r\n\tcreateSimpleServer() {\r\n\t\treturn this._networking.createSimpleServer();\r\n\t}\r\n\tgetServiceExecutor() {\r\n\t\treturn this._upnp.getServiceExecutor();\r\n\t}\r\n\tcreateDeviceService(serviceExecutor) {\r\n\t\treturn this._upnp.createDeviceService();\r\n\t}\r\n\tcreateFrontEndBridge(deviceService, serviceExecutor, simpleServer) {\r\n\t\treturn new FrontEndBridge(this._upnp.createSubscriptionService(), serviceExecutor, this._sdk.createFileUtilities(), deviceService, simpleServer, this._sdk.createSimpleTCP());\r\n\t}\r\n\tcreateTab(button, frontEndBridge) {\r\n\t\tconst Tab = require('./Firefox/Tab');\r\n\t\treturn new Tab(this._sdk.firefox.tabs(), button, frontEndBridge);\r\n\t}\r\n\r\n}\r\n\r\nmodule.exports = CompositionRoot;"]}